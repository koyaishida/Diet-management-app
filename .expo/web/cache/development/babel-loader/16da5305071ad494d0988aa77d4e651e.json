{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/aichibaseball/training-management-app/src/screens/WeightManagementScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport CircleButton from \"../elements/CircleButton\";\nimport { Input } from 'react-native-elements';\nimport { Calendar } from 'react-native-calendars';\nimport firebase from \"firebase\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FFFDF6\",\n    width: \"100%\",\n    padding: 20\n  }\n});\n\nvar dateToString = function dateToString(date) {\n  var str = date.toDate().toISOString();\n  return str.split(\"T\")[0];\n};\n\nvar WeightManagementScreen = function WeightManagementScreen(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      weight = _useState2[0],\n      setWeight = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      bodyFatPercentage = _useState4[0],\n      setBodyFatPercentage = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      weightList = _useState6[0],\n      setWeightList = _useState6[1];\n\n  var _useState7 = useState(new Date().toISOString().split(\"T\")[0]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      currentDay = _useState8[0],\n      setCurrentDay = _useState8[1];\n\n  useEffect(function () {\n    var _firebase$auth = firebase.auth(),\n        currentUser = _firebase$auth.currentUser;\n\n    var db = firebase.firestore();\n    db.collection(\"users/\" + currentUser.uid + \"/weight\").onSnapshot(function (querySnapshot) {\n      var weightList = [];\n      querySnapshot.forEach(function (doc) {\n        weightList.push(_objectSpread({}, doc.data(), {\n          key: doc.id\n        }));\n      });\n      setWeightList(weightList);\n    });\n    return function () {\n      console.log('Clean Up ');\n    };\n  }, [currentDay]);\n  var todayWeightList = weightList.filter(function (item, index) {\n    if (dateToString(item.date) === currentDay) {\n      return true;\n    }\n  });\n  console.log(todayWeightList);\n\n  var handleSubmit = function handleSubmit() {\n    console.log(\"press\");\n    var db = firebase.firestore();\n\n    var _firebase$auth2 = firebase.auth(),\n        currentUser = _firebase$auth2.currentUser;\n\n    db.collection(\"users/\" + currentUser.uid + \"/weight\").add({\n      weight: weight,\n      bodyFatPercentage: bodyFatPercentage,\n      date: new Date()\n    }).then(function () {\n      props.navigation.navigate(\"Home\");\n      console.log(\"then\");\n    }).catch(function (error) {\n      console.error(\"Error adding document: \", error);\n    });\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      Keyboard.dismiss();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, React.createElement(Input, {\n    label: \"\\u4F53\\u91CD (kg)\",\n    placeholder: \"\\u534A\\u89D2\\u6570\\u5B57\\u3067\\u5165\\u529B\\u3057\\u3066\\u4E0B\\u3055\\u3044\",\n    value: weight,\n    inputStyle: {\n      padding: 10\n    },\n    labelStyle: {\n      paddingTop: 5,\n      color: \"black\",\n      fontSize: 17,\n      fontWeight: \"100\"\n    },\n    onChangeText: function onChangeText(text) {\n      return setWeight(text);\n    },\n    keyboardType: \"numeric\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    label: \"\\u4F53\\u8102\\u80AA\\u7387 (%)\",\n    placeholder: \"\\u534A\\u89D2\\u6570\\u5B57\\u3067\\u5165\\u529B\\u3057\\u3066\\u4E0B\\u3055\\u3044\",\n    value: bodyFatPercentage,\n    inputStyle: {\n      padding: 10\n    },\n    labelStyle: {\n      paddingTop: 5,\n      color: \"black\",\n      fontSize: 17,\n      fontWeight: \"100\"\n    },\n    onChangeText: function onChangeText(text) {\n      return setBodyFatPercentage(text);\n    },\n    keyboardType: \"numeric\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }), React.createElement(Calendar, {\n    onDayPress: function onDayPress(day) {\n      setCurrentDay(day.dateString);\n    },\n    style: {\n      borderColor: 'gray',\n      height: 350,\n      width: \"100%\",\n      marginTop: 100\n    },\n    markedDates: _defineProperty({}, currentDay, {\n      selected: true,\n      selectedColor: \"#ffa500\"\n    }),\n    markingType: 'multi-dot',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }), React.createElement(CircleButton, {\n    name: \"check\",\n    onPress: handleSubmit,\n    placeholder: \"body\",\n    style: {\n      position: \"absolute\",\n      top: 180,\n      right: 32\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default WeightManagementScreen;","map":{"version":3,"sources":["/Users/aichibaseball/training-management-app/src/screens/WeightManagementScreen.js"],"names":["React","useState","useEffect","CircleButton","Input","Calendar","firebase","styles","StyleSheet","create","container","flex","backgroundColor","width","padding","dateToString","date","str","toDate","toISOString","split","WeightManagementScreen","props","weight","setWeight","bodyFatPercentage","setBodyFatPercentage","weightList","setWeightList","Date","currentDay","setCurrentDay","auth","currentUser","db","firestore","collection","uid","onSnapshot","querySnapshot","forEach","doc","push","data","key","id","console","log","todayWeightList","filter","item","index","handleSubmit","add","then","navigation","navigate","catch","error","Keyboard","dismiss","paddingTop","color","fontSize","fontWeight","text","day","dateString","borderColor","height","marginTop","selected","selectedColor","position","top","right"],"mappings":"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","sourcesContent":["import React ,{useState,useEffect}from 'react';\nimport { StyleSheet, View,TouchableWithoutFeedback,Keyboard,Text } from 'react-native';\nimport CircleButton from \"../elements/CircleButton\"\nimport { Input,} from 'react-native-elements'\nimport {Calendar} from 'react-native-calendars'\nimport firebase from \"firebase\"\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FFFDF6\",\n    width: \"100%\",\n    padding:20,\n  },\n});\nconst  dateToString = (date)=>{\n  const str = date.toDate().toISOString();\n  return str.split(\"T\")[0]\n}\n\nconst WeightManagementScreen = (props) => {\n  const [weight,setWeight] =useState(\"\")\n  const [bodyFatPercentage,setBodyFatPercentage] =useState(\"\")\n  const [weightList,setWeightList] = useState([])\n  const [currentDay,setCurrentDay] = useState(new Date().toISOString().split(\"T\")[0],)\n  \n\n\n  useEffect(()=>{\n\n    const {currentUser} = firebase.auth();\n    const db =firebase.firestore()\n\n    db.collection(`users/${currentUser.uid}/weight`)\n     .onSnapshot((querySnapshot)=>{\n       const weightList = []\n       querySnapshot.forEach((doc)=>{\n         weightList.push({...doc.data(),key: doc.id})\n       })\n       setWeightList(weightList)\n    })   \n    \n    \n    return () => {console.log('Clean Up ')};\n  },[currentDay])\n\n  const todayWeightList = weightList.filter((item,index,)=>{\n    if (dateToString(item.date) === currentDay){\n      return true\n    }\n  })\n  console.log(todayWeightList)\n\n\n  //体重の値が０の時エラーにある為、後日修正\n  const handleSubmit = () => {\n    console.log(\"press\")\n     const db = firebase.firestore();\n     const {currentUser} = firebase.auth();\n      db.collection(`users/${currentUser.uid}/weight`).add({\n           weight : weight,\n           bodyFatPercentage : bodyFatPercentage,\n           date: new Date()\n      })\n     .then(()=> {\n       props.navigation.navigate(\"Home\")\n       console.log(\"then\")\n     })\n     .catch((error)=>{\n       console.error(\"Error adding document: \", error);\n     });\n  }\n  \n  \n  return (\n    <TouchableWithoutFeedback onPress={()=>{Keyboard.dismiss()}}>\n      <View style={styles.container}>\n        {/* <Calendar \n        onDayPress = {((day)=>{setCurrentDay(day.dateString)})}\n        style={{\n          borderColor: 'gray',\n          height: 350,\n          width:\"100%\"\n        }}\n         markedDates={\n           {[currentDay]:{selected:true,selectedColor:\"#ffa500\"}}\n         }\n        markingType={'multi-dot'}/> */}\n        <Input\n          label=\"体重 (kg)\"\n          placeholder=\"半角数字で入力して下さい\"\n          value={weight}\n          inputStyle={{padding:10}}\n          labelStyle={{paddingTop:5,color:\"black\",fontSize:17,fontWeight:\"100\"}}\n          onChangeText={text => setWeight(text)}\n          keyboardType={\"numeric\"}\n        />\n        <Input\n          label=\"体脂肪率 (%)\"\n          placeholder=\"半角数字で入力して下さい\"\n          value={bodyFatPercentage}\n          inputStyle={{padding:10}}\n          labelStyle={{paddingTop:5,color:\"black\",fontSize:17,fontWeight:\"100\"}}\n          onChangeText={text => setBodyFatPercentage(text)}\n          keyboardType={\"numeric\"}\n        />\n        <Calendar \n        onDayPress = {((day)=>{setCurrentDay(day.dateString)})}\n        style={{\n          borderColor: 'gray',\n          height: 350,\n          width:\"100%\",\n          marginTop:100,\n        }}\n         markedDates={\n           {[currentDay]:{selected:true,selectedColor:\"#ffa500\"}}\n         }\n        markingType={'multi-dot'}/>\n        {/* <Text>{`${todayWeightList[0].weight}`}</Text> */}\n        <CircleButton name={\"check\"} onPress={handleSubmit} placeholder=\"body\" style={{position: \"absolute\",\n    top: 180,\n    right: 32,\n    }}/>\n      </View>\n    </TouchableWithoutFeedback>\n  );\n}\n\nexport default WeightManagementScreen"]},"metadata":{},"sourceType":"module"}