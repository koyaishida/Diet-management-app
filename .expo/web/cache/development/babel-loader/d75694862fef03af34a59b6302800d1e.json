{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/aichibaseball/training-management-app/src/screens/FoodAddScreen.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport CircleButton from \"../elements/CircleButton\";\nimport firebase from \"firebase\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FFFDF6\",\n    width: \"100%\"\n  },\n  kcalInput: {\n    paddingTop: 32,\n    paddingLeft: 16,\n    paddingRight: 16,\n    paddingBottom: 16,\n    fontSize: 24,\n    width: \"80%\"\n  },\n  foodMemo: {\n    flex: 1,\n    paddingTop: 32,\n    paddingLeft: 16,\n    paddingRight: 16,\n    paddingBottom: 16,\n    fontSize: 18,\n    color: \"black\",\n    backgroundColor: \"#FFF\"\n  },\n  inputLocation: {\n    flexDirection: \"row\"\n  },\n  unit: {\n    fontSize: 30,\n    marginTop: 40\n  }\n});\n\nvar FoodAddScreen = function FoodAddScreen(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      kcal = _useState2[0],\n      setKcal = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      foodMemo = _useState4[0],\n      setFoodMemo = _useState4[1];\n\n  var handleSubmit = function handleSubmit() {\n    var db = firebase.firestore();\n\n    var _firebase$auth = firebase.auth(),\n        currentUser = _firebase$auth.currentUser;\n\n    db.collection(\"users/\" + currentUser.uid + \"/food\").add({\n      kcal: kcal,\n      foodMemo: foodMemo,\n      date: new Date()\n    }).then(function () {\n      props.navigation.navigate(\"FoodManagement\");\n    }).catch(function (error) {\n      console.error(\"Error adding document: \", error);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.inputLocation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    multiline: true,\n    style: styles.kcalInput,\n    value: kcal,\n    onChangeText: function onChangeText(text) {\n      return setKcal(text);\n    },\n    placeholder: \"\\u7DCF\\u30AB\\u30ED\\u30EA\\u30FC\",\n    keyboardType: \"numeric\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.unit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"kcal\")), React.createElement(TextInput, {\n    multiline: true,\n    style: styles.foodMemo,\n    value: foodMemo,\n    onChangeText: function onChangeText(text) {\n      return setFoodMemo(text);\n    },\n    placeholder: \"\\u98DF\\u4E8B\\u5185\\u5BB9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), React.createElement(CircleButton, {\n    name: \"check\",\n    onPress: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default FoodAddScreen;","map":{"version":3,"sources":["/Users/aichibaseball/training-management-app/src/screens/FoodAddScreen.js"],"names":["React","useState","CircleButton","firebase","styles","StyleSheet","create","container","flex","backgroundColor","width","kcalInput","paddingTop","paddingLeft","paddingRight","paddingBottom","fontSize","foodMemo","color","inputLocation","flexDirection","unit","marginTop","FoodAddScreen","props","kcal","setKcal","setFoodMemo","handleSubmit","db","firestore","auth","currentUser","collection","uid","add","date","Date","then","navigation","navigate","catch","error","console","text"],"mappings":"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","sourcesContent":["import React ,{useState}from 'react';\nimport { StyleSheet, View, TextInput,Text } from 'react-native';\nimport CircleButton from \"../elements/CircleButton\"\nimport firebase from \"firebase\"\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FFFDF6\",\n    width: \"100%\",\n  },\n  kcalInput: {\n    paddingTop: 32,\n    paddingLeft: 16,\n    paddingRight: 16,\n    paddingBottom: 16,\n    fontSize: 24,\n    width: \"80%\"\n  },\n  foodMemo: {\n    flex:1,\n    paddingTop: 32,\n    paddingLeft: 16,\n    paddingRight: 16,\n    paddingBottom: 16,\n    fontSize: 18,\n    color: \"black\",\n    backgroundColor: \"#FFF\"\n  },\n  inputLocation :{\n    flexDirection : \"row\",\n  },\n  unit : {\n    fontSize : 30,\n    marginTop :40,\n  },\n});\n\n\n// onPress={()=>{props.navigation.navigate(\"MemoList\")}\nconst FoodAddScreen = (props) => {\n  const [kcal,setKcal] =useState(\"\")\n  const [foodMemo,setFoodMemo] =useState(\"\")\n\n  const handleSubmit = () => {\n    \n      const db = firebase.firestore();\n      const {currentUser} = firebase.auth();\n       db.collection(`users/${currentUser.uid}/food`).add({\n         kcal: kcal,\n         foodMemo: foodMemo,\n         date: new Date()\n       })\n      .then(()=> {\n        //FoodManagementScreenに移動する際、paramsが無いため、Foodリストが表示されない。\n        props.navigation.navigate(\"FoodManagement\")\n      })\n      .catch((error)=>{\n        console.error(\"Error adding document: \", error);\n      });\n  }\n  \n  return (\n    <View style={styles.container}>\n      <View style={styles.inputLocation}>\n        <TextInput multiline style={styles.kcalInput} value={kcal}\n        onChangeText={text => setKcal(text)} placeholder=\"総カロリー\" keyboardType={\"numeric\"}/>\n        <Text style={styles.unit}>kcal</Text>\n      </View>\n      \n\n      <TextInput multiline style={styles.foodMemo} value={foodMemo}\n       onChangeText={text => setFoodMemo(text)}  placeholder=\"食事内容\"/>\n      <CircleButton name={\"check\"} onPress={handleSubmit}/>\n    </View>\n  );\n}\n\nexport default FoodAddScreen"]},"metadata":{},"sourceType":"module"}