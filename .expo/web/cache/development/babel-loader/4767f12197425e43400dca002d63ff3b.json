{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/aichibaseball/training-management-app/src/screens/LoginScreen.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport firebase from \"firebase\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { CommonActions } from '@react-navigation/native';\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FFFDF6\",\n    width: \"100%\",\n    paddingTop: 72,\n    paddingRight: 24,\n    paddingLeft: 24\n  },\n  input: {\n    height: 48,\n    marginBottom: 24,\n    backgroundColor: \"#eee\",\n    borderWidth: 1,\n    borderColor: \"#DDD\",\n    padding: 8,\n    lineHeight: 24,\n    fontSize: 18,\n    borderRadius: 6\n  },\n  button: {\n    backgroundColor: \"#E31676\",\n    height: 48,\n    borderRadius: 14,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"80%\",\n    alignSelf: \"center\",\n    marginTop: 18\n  },\n  buttonTitle: {\n    fontSize: 20,\n    color: \"#fff\"\n  },\n  toSignup: {\n    marginTop: 18,\n    alignSelf: \"center\",\n    borderBottomWidth: 1\n  },\n  signupText: {\n    fontSize: 20\n  }\n});\n\nvar LoginScreen = function LoginScreen(props) {\n  var _useState = useState(\"k.157.2aic@gmail.com\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"k-a.157.2\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var handleLogin = function handleLogin() {\n    firebase.auth().signInWithEmailAndPassword(email, password).then(function () {\n      console.log(\"success\");\n      props.navigation.navigate(\"PersonalData\");\n    }).catch(function (error) {\n      console.log(error);\n      console.log(\"error\");\n    });\n  };\n\n  var switchToSignup = function switchToSignup() {\n    return [props.navigation.navigate(\"Signup\")];\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    value: email,\n    placeholder: \"Email\",\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    value: password,\n    placeholder: \"Password\",\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    secureTextEntry: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableHighlight, {\n    style: styles.button,\n    underlayColor: \"#C70F66\",\n    onPress: handleLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, \"\\u30ED\\u30B0\\u30A4\\u30F3\")), React.createElement(TouchableOpacity, {\n    style: styles.toSignup,\n    onPress: switchToSignup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.signupText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"\\u65B0\\u898F\\u767B\\u9332\\u306F\\u3053\\u3061\\u3089\")));\n};\n\nexport default LoginScreen;","map":{"version":3,"sources":["/Users/aichibaseball/training-management-app/src/screens/LoginScreen.js"],"names":["React","useState","firebase","TouchableOpacity","CommonActions","styles","StyleSheet","create","container","flex","backgroundColor","width","paddingTop","paddingRight","paddingLeft","input","height","marginBottom","borderWidth","borderColor","padding","lineHeight","fontSize","borderRadius","button","justifyContent","alignItems","alignSelf","marginTop","buttonTitle","color","toSignup","borderBottomWidth","signupText","LoginScreen","props","email","setEmail","password","setPassword","handleLogin","auth","signInWithEmailAndPassword","then","console","log","navigation","navigate","catch","error","switchToSignup","text"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA6B,OAA7B;;;;;;AAEA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,SAFR;AAGTC,IAAAA,KAAK,EAAE,MAHE;AAITC,IAAAA,UAAU,EAAE,EAJH;AAKTC,IAAAA,YAAY,EAAE,EALL;AAMTC,IAAAA,WAAW,EAAE;AANJ,GADoB;AAS/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE,EADH;AAELC,IAAAA,YAAY,EAAC,EAFR;AAGLP,IAAAA,eAAe,EAAE,MAHZ;AAILQ,IAAAA,WAAW,EAAE,CAJR;AAKLC,IAAAA,WAAW,EAAE,MALR;AAMLC,IAAAA,OAAO,EAAE,CANJ;AAOLC,IAAAA,UAAU,EAAE,EAPP;AAQLC,IAAAA,QAAQ,EAAE,EARL;AASLC,IAAAA,YAAY,EAAE;AATT,GATwB;AAoB/BC,EAAAA,MAAM,EAAE;AACNd,IAAAA,eAAe,EAAE,SADX;AAENM,IAAAA,MAAM,EAAE,EAFF;AAGNO,IAAAA,YAAY,EAAE,EAHR;AAINE,IAAAA,cAAc,EAAE,QAJV;AAKNC,IAAAA,UAAU,EAAE,QALN;AAMNf,IAAAA,KAAK,EAAE,KAND;AAONgB,IAAAA,SAAS,EAAE,QAPL;AAQNC,IAAAA,SAAS,EAAE;AARL,GApBuB;AA8B/BC,EAAAA,WAAW,EAAE;AACXP,IAAAA,QAAQ,EAAC,EADE;AAEXQ,IAAAA,KAAK,EAAE;AAFI,GA9BkB;AAkC/BC,EAAAA,QAAQ,EAAE;AACRH,IAAAA,SAAS,EAAE,EADH;AAERD,IAAAA,SAAS,EAAE,QAFH;AAGRK,IAAAA,iBAAiB,EAAC;AAHV,GAlCqB;AAuC/BC,EAAAA,UAAU,EAAC;AACTX,IAAAA,QAAQ,EAAC;AADA;AAvCoB,CAAlB,CAAf;;AA8CA,IAAMY,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAAA,kBAELlC,QAAQ,CAAC,sBAAD,CAFH;AAAA;AAAA,MAEtBmC,KAFsB;AAAA,MAEhBC,QAFgB;;AAAA,mBAGCpC,QAAQ,CAAC,WAAD,CAHT;AAAA;AAAA,MAGtBqC,QAHsB;AAAA,MAGbC,WAHa;;AAK7B,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAK;AACvBtC,IAAAA,QAAQ,CAACuC,IAAT,GAAgBC,0BAAhB,CAA2CN,KAA3C,EAAkDE,QAAlD,EACGK,IADH,CACQ,YAAI;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAV,MAAAA,KAAK,CAACW,UAAN,CAAiBC,QAAjB,CAA0B,cAA1B;AASD,KAZH,EAcGC,KAdH,CAcS,UAACC,KAAD,EAAS;AACdL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,KAjBH;AAmBD,GApBD;;AAqBA,MAAMK,cAAc,GAAG,SAAjBA,cAAiB;AAAA,WAAI,CACzBf,KAAK,CAACW,UAAN,CAAiBC,QAAjB,CAA0B,QAA1B,CADyB,CAAJ;AAAA,GAAvB;;AAIA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE1C,MAAM,CAACG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEH,MAAM,CAACU,KAAzB;AAAgC,IAAA,KAAK,EAAEqB,KAAvC;AAA8C,IAAA,WAAW,EAAC,OAA1D;AACA,IAAA,YAAY,EAAE,sBAAAe,IAAI;AAAA,aAAId,QAAQ,CAACc,IAAD,CAAZ;AAAA,KADlB;AACsC,IAAA,cAAc,EAAC,MADrD;AAC4D,IAAA,WAAW,EAAE,KADzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAIE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE9C,MAAM,CAACU,KAAzB;AAAgC,IAAA,KAAK,EAAEuB,QAAvC;AAAiD,IAAA,WAAW,EAAC,UAA7D;AAAwE,IAAA,YAAY,EAAE,sBAAAa,IAAI;AAAA,aAAIZ,WAAW,CAACY,IAAD,CAAf;AAAA,KAA1F;AAAiH,IAAA,cAAc,EAAC,MAAhI;AAAuI,IAAA,WAAW,EAAE,KAApJ;AAA2J,IAAA,eAAe,EAAE,IAA5K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAME,oBAAC,kBAAD;AAAoB,IAAA,KAAK,EAAE9C,MAAM,CAACmB,MAAlC;AAA0C,IAAA,aAAa,EAAC,SAAxD;AACE,IAAA,OAAO,EAAEgB,WADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEnC,MAAM,CAACwB,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFF,CANF,EAUE,oBAAC,gBAAD;AAAmB,IAAA,KAAK,EAAExB,MAAM,CAAC0B,QAAjC;AAA2C,IAAA,OAAO,EAAEmB,cAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE7C,MAAM,CAAC4B,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDADF,CAVF,CADF;AAmBD,CAjDD;;AAmDA,eAAeC,WAAf","sourcesContent":["import React, {useState}from 'react';\nimport { StyleSheet, View,Text, TextInput, TouchableHighlight } from 'react-native';\nimport firebase from \"firebase\"\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { CommonActions } from '@react-navigation/native'\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FFFDF6\",\n    width: \"100%\",\n    paddingTop: 72,\n    paddingRight: 24,\n    paddingLeft: 24,\n  },\n  input: {\n    height: 48,\n    marginBottom:24,\n    backgroundColor: \"#eee\",\n    borderWidth: 1,\n    borderColor: \"#DDD\",\n    padding: 8,\n    lineHeight: 24,\n    fontSize: 18,\n    borderRadius: 6,\n  },\n  button: {\n    backgroundColor: \"#E31676\",\n    height: 48,\n    borderRadius: 14,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"80%\",\n    alignSelf: \"center\",\n    marginTop: 18,\n  },\n  buttonTitle: {\n    fontSize:20,\n    color: \"#fff\",\n  },\n  toSignup :{\n    marginTop: 18,\n    alignSelf: \"center\",\n    borderBottomWidth:1,\n  },\n  signupText:{\n    fontSize:20,\n  }\n  \n});\n\n\nconst LoginScreen = (props) => {\n\n  const [email,setEmail] =useState(\"k.157.2aic@gmail.com\")\n  const [password,setPassword] =useState(\"k-a.157.2\")\n\n  const handleLogin = () =>{\n    firebase.auth().signInWithEmailAndPassword(email, password)\n      .then(()=>{\n        console.log(\"success\")\n        props.navigation.navigate(\"PersonalData\")\n        // const resetAction = \n        //   CommonActions.reset({\n        //     index:0,\n        //     routes: [\n        //       {name: \"Home\"}\n        //     ],\n        //   })\n        // props.navigation.dispatch(resetAction)\n      })\n\n      .catch((error)=>{\n        console.log(error)\n        console.log(\"error\")\n      })\n    \n  }\n  const switchToSignup = ()=>[\n    props.navigation.navigate(\"Signup\")\n  ]\n\n  return (\n    <View style={styles.container}>\n\n      <TextInput style={styles.input} value={email} placeholder=\"Email\" \n      onChangeText={text => setEmail(text)} autoCapitalize=\"none\" autoCorrect={false}/>\n      <TextInput style={styles.input} value={password} placeholder=\"Password\" onChangeText={text => setPassword(text)} autoCapitalize=\"none\" autoCorrect={false} secureTextEntry={true}/>\n\n      <TouchableHighlight style={styles.button} underlayColor=\"#C70F66\"\n        onPress={handleLogin}>\n        <Text style={styles.buttonTitle}>ログイン</Text>\n      </TouchableHighlight>\n      <TouchableOpacity  style={styles.toSignup} onPress={switchToSignup}>\n        <Text style={styles.signupText}>\n          新規登録はこちら\n        </Text>\n      </TouchableOpacity>\n\n    </View>\n  );\n}\n\nexport default LoginScreen"]},"metadata":{},"sourceType":"module"}