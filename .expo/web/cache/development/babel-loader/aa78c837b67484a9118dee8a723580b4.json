{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/aichibaseball/training-management-app/src/screens/TrainingMemoScreen.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport CircleButton from \"../elements/CircleButton\";\nimport firebase from \"firebase\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FFFDF6\",\n    width: \"100%\"\n  },\n  textInput: {\n    paddingTop: 32,\n    paddingLeft: 16,\n    paddingRight: 16,\n    paddingBottom: 16,\n    fontSize: 24,\n    width: \"70%\",\n    backgroundColor: \"#FFFDF6\",\n    borderBottomColor: \"#ddd\",\n    borderBottomWidth: 1\n  },\n  inputLocation: {\n    flexDirection: \"row\"\n  },\n  unit: {\n    fontSize: 30,\n    marginTop: 40\n  }\n});\n\nvar TrainingMemoScreen = function TrainingMemoScreen(props) {\n  var _props$route$params = props.route.params,\n      trainingMenu = _props$route$params.trainingMenu,\n      part = _props$route$params.part;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      kg = _useState2[0],\n      setKg = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      reps = _useState4[0],\n      setReps = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      setCount = _useState6[0],\n      setSetCount = _useState6[1];\n\n  var handleSubmit = function handleSubmit() {\n    var db = firebase.firestore();\n\n    var _firebase$auth = firebase.auth(),\n        currentUser = _firebase$auth.currentUser;\n\n    db.collection(\"users/\" + currentUser.uid + \"/trainingMemoList\").add({\n      part: part,\n      menuName: trainingMenu,\n      kg: kg,\n      reps: reps,\n      setCount: setCount,\n      date: new Date()\n    }).then(function () {\n      props.navigation.navigate(\"TrainingMenu\");\n    }).catch(function (error) {\n      console.error(\"Error adding document: \", error);\n    });\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      Keyboard.dismiss();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.inputLocation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    multiline: true,\n    style: styles.textInput,\n    value: kg,\n    onChangeText: function onChangeText(text) {\n      return setKg(text);\n    },\n    placeholder: \"weight \\u91CD\\u3055\",\n    keyboardType: \"numeric\",\n    returnKeyType: \"done\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.unit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"kg\")), React.createElement(View, {\n    style: styles.inputLocation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    multiline: true,\n    style: styles.textInput,\n    value: reps,\n    onChangeText: function onChangeText(text) {\n      return setReps(text);\n    },\n    placeholder: \"Reps \\u56DE\\u6570\",\n    keyboardType: \"numeric\",\n    returnKeyType: \"done\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.unit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"\\u56DE\")), React.createElement(View, {\n    style: styles.inputLocation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    multiline: true,\n    style: styles.textInput,\n    value: setCount,\n    onChangeText: function onChangeText(text) {\n      return setSetCount(text);\n    },\n    placeholder: \"set \\u30BB\\u30C3\\u30C8\\u6570\",\n    keyboardType: \"numeric\",\n    returnKeyType: \"done\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.unit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"\\u30BB\\u30C3\\u30C8\")), React.createElement(CircleButton, {\n    name: \"check\",\n    onPress: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default TrainingMemoScreen;","map":{"version":3,"sources":["/Users/aichibaseball/training-management-app/src/screens/TrainingMemoScreen.js"],"names":["React","useState","CircleButton","firebase","styles","StyleSheet","create","container","flex","backgroundColor","width","textInput","paddingTop","paddingLeft","paddingRight","paddingBottom","fontSize","borderBottomColor","borderBottomWidth","inputLocation","flexDirection","unit","marginTop","TrainingMemoScreen","props","route","params","trainingMenu","part","kg","setKg","reps","setReps","setCount","setSetCount","handleSubmit","db","firestore","auth","currentUser","collection","uid","add","menuName","date","Date","then","navigation","navigate","catch","error","console","Keyboard","dismiss","text"],"mappings":"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","sourcesContent":["import React ,{useState}from 'react';\nimport { StyleSheet, View, TextInput,Text,TouchableWithoutFeedback,Keyboard } from 'react-native';\nimport CircleButton from \"../elements/CircleButton\"\nimport firebase from \"firebase\"\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FFFDF6\",\n    width: \"100%\",\n  },\n  textInput: {\n    paddingTop: 32,\n    paddingLeft: 16,\n    paddingRight: 16,\n    paddingBottom: 16,\n    fontSize: 24,\n    width: \"70%\",\n    backgroundColor:\"#FFFDF6\",\n    borderBottomColor: \"#ddd\",\n    borderBottomWidth:1\n  },\n  inputLocation :{\n    flexDirection : \"row\",\n  },\n  unit : {\n    fontSize : 30,\n    marginTop :40,\n  },\n});\n\nconst TrainingMemoScreen = (props) => {\n  const {trainingMenu,part} = props.route.params\n  const [kg,setKg] =useState(\"\")\n  const [reps,setReps] =useState(\"\")\n  const [setCount,setSetCount] =useState(\"\")\n\n  const handleSubmit = () => {\n    \n      const db = firebase.firestore();\n      const {currentUser} = firebase.auth();\n       db.collection(`users/${currentUser.uid}/trainingMemoList`).add({\n        part : part,\n        menuName : trainingMenu,\n        kg : kg,\n        reps : reps,\n        setCount : setCount,\n        date : new Date(),\n       })\n      .then(()=> {\n        props.navigation.navigate(\"TrainingMenu\")\n      })\n      .catch((error)=>{\n        console.error(\"Error adding document: \", error);\n      });\n  }\n  \n  return (\n    <TouchableWithoutFeedback onPress={()=>{Keyboard.dismiss()}}>\n      <View  style={styles.container}>\n        <View style={styles.inputLocation}>\n          <TextInput multiline style={styles.textInput} value={kg}\n          onChangeText={text => setKg(text)} placeholder=\"weight 重さ\" keyboardType={\"numeric\"} returnKeyType=\"done\"/>\n          <Text style={styles.unit}>kg</Text>\n        </View>\n        <View style={styles.inputLocation}>\n          <TextInput multiline style={styles.textInput} value={reps}\n          onChangeText={text => setReps(text)} placeholder=\"Reps 回数\" keyboardType={\"numeric\"} returnKeyType=\"done\"/>\n          <Text style={styles.unit}>回</Text>\n        </View>\n        \n        <View style={styles.inputLocation}>\n          <TextInput multiline style={styles.textInput} value={setCount}\n          onChangeText={text => setSetCount(text)}  placeholder=\"set セット数\" keyboardType={\"numeric\"} returnKeyType=\"done\"/>\n          <Text style={styles.unit}>セット</Text>\n        </View>\n        <CircleButton name={\"check\"} onPress={handleSubmit}/>\n      </View>\n    </TouchableWithoutFeedback>\n  );\n}\n\nexport default TrainingMemoScreen"]},"metadata":{},"sourceType":"module"}