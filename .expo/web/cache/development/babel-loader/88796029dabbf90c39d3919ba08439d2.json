{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/aichibaseball/training-management-app/src/screens/FoodManagementScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FoodList from \"../components/FoodList\";\nimport CircleButton from \"../elements/CircleButton\";\nimport firebase from \"firebase\";\nimport { Calendar } from 'react-native-calendars';\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FFFDF6\",\n    width: \"100%\"\n  },\n  dotsDescription: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    backgroundColor: \"#fff\",\n    paddingBottom: 2,\n    borderBottomWidth: 1,\n    borderBottomColor: \"#ddd\"\n  },\n  dotItem: {\n    flexDirection: \"row\"\n  }\n});\n\nvar older = function older(a, b) {\n  return a.date.seconds - b.date.seconds;\n};\n\nvar FoodManagementScreen = function FoodManagementScreen(props) {\n  dateToString = function dateToString(date) {\n    var str = date.toDate().toISOString();\n    return str.split(\"T\")[0];\n  };\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      foodData = _useState2[0],\n      setFoodData = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      kcalList = _useState4[0],\n      setKcalList = _useState4[1];\n\n  var _useState5 = useState(new Date().toISOString().split(\"T\")[0]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentDay = _useState6[0],\n      setCurrentDay = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      requiredKcal = _useState8[0],\n      setRequiredKcal = _useState8[1];\n\n  useEffect(function () {\n    var _firebase$auth = firebase.auth(),\n        currentUser = _firebase$auth.currentUser;\n\n    var db = firebase.firestore();\n    db.collection(\"users/\" + currentUser.uid + \"/food\").onSnapshot(function (querySnapshot) {\n      var foodData = [];\n      querySnapshot.forEach(function (doc) {\n        foodData.push(_objectSpread({}, doc.data(), {\n          key: doc.id\n        }));\n      });\n      setFoodData(foodData);\n      var sortedKcalData = [].concat(foodData).sort(older);\n\n      for (var i = 0; i < sortedKcalData.length; i++) {\n        if (i === 0) {\n          kcalList.push({\n            kcal: parseFloat(sortedKcalData[0].kcal),\n            date: dateToString(sortedKcalData[0].date)\n          });\n        } else {\n          if (dateToString(sortedKcalData[i].date) === dateToString(sortedKcalData[i - 1].date)) {\n            kcalList[kcalList.length - 1].kcal += parseFloat(sortedKcalData[i].kcal);\n          } else {\n            kcalList.push({\n              kcal: parseFloat(sortedKcalData[i].kcal),\n              date: dateToString(sortedKcalData[i].date)\n            });\n          }\n        }\n      }\n\n      if (kcalList.length == 0) {\n        setKcalList();\n      } else {\n        setKcalList(kcalList);\n      }\n    });\n    db.collection(\"users/\" + currentUser.uid + \"/personalData\").onSnapshot(function (querySnapshot) {\n      var personalData = [];\n      querySnapshot.forEach(function (doc) {\n        personalData.push(_objectSpread({}, doc.data(), {\n          key: doc.id\n        }));\n      });\n      setRequiredKcal(personalData[0].requiredKcal);\n    });\n    return function () {\n      console.log('Clean Up ');\n    };\n  }, []);\n  var todayFoodList = foodData.filter(function (item, index) {\n    if (dateToString(item.date) === currentDay) {\n      return true;\n    }\n  });\n\n  var todaysFoodData = _toConsumableArray(todayFoodList).sort(older);\n\n  var markedDays = [0];\n  kcalList.forEach(function (i) {\n    if (requiredKcal - i.kcal >= 0) {\n      markedDays.push({\n        date: i.date,\n        dot: {\n          dots: [{\n            color: \"green\"\n          }]\n        }\n      });\n    } else if (requiredKcal - i.kcal < 0) {\n      markedDays.push({\n        date: i.date,\n        dot: {\n          dots: [{\n            color: \"red\"\n          }]\n        }\n      });\n    }\n  });\n  var dotDays = Object.assign.apply(Object, _toConsumableArray(markedDays.map(function (item) {\n    return _defineProperty({}, item.date, item.dot);\n  })));\n\n  var markedDates = _objectSpread({}, dotDays, _defineProperty({}, currentDay, {\n    selected: true,\n    selectedColor: \"#ffa500\"\n  }));\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, React.createElement(Calendar, {\n    onDayPress: function onDayPress(day) {\n      setCurrentDay(day.dateString);\n    },\n    style: {\n      height: 350,\n      width: \"100%\",\n      borderColor: 'gray'\n    },\n    markedDates: markedDates,\n    markingType: 'multi-dot',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.dotsDescription,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.dotItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"green\",\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, \"\\u30FB\"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }, \"\\u9069\\u6B63\\u30AB\\u30ED\\u30EA\\u30FC\")), React.createElement(View, {\n    style: styles.dotItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"red\",\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }, \"\\u30FB\"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }, \"\\u30AB\\u30ED\\u30EA\\u30FC\\u30AA\\u30FC\\u30D0\\u30FC\"))), React.createElement(FoodList, {\n    foodData: todaysFoodData,\n    navigation: props.navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }), React.createElement(CircleButton, {\n    name: \"plus\",\n    onPress: function onPress() {\n      return props.navigation.navigate(\"FoodAdd\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default FoodManagementScreen;","map":{"version":3,"sources":["/Users/aichibaseball/training-management-app/src/screens/FoodManagementScreen.js"],"names":["React","useState","useEffect","FoodList","CircleButton","firebase","Calendar","styles","StyleSheet","create","container","flex","backgroundColor","width","dotsDescription","flexDirection","justifyContent","paddingBottom","borderBottomWidth","borderBottomColor","dotItem","older","a","b","date","seconds","FoodManagementScreen","props","dateToString","str","toDate","toISOString","split","foodData","setFoodData","kcalList","setKcalList","Date","currentDay","setCurrentDay","requiredKcal","setRequiredKcal","auth","currentUser","db","firestore","collection","uid","onSnapshot","querySnapshot","forEach","doc","push","data","key","id","sortedKcalData","sort","i","length","kcal","parseFloat","personalData","console","log","todayFoodList","filter","item","index","todaysFoodData","markedDays","dot","dots","color","dotDays","Object","assign","map","markedDates","selected","selectedColor","day","dateString","height","borderColor","fontWeight","navigation","navigate"],"mappings":"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","sourcesContent":["import React ,{useState,useEffect}from 'react';\nimport { StyleSheet, View,Text} from 'react-native';\nimport FoodList from \"../components/FoodList\"\nimport CircleButton from \"../elements/CircleButton\"\nimport firebase from \"firebase\"\nimport {Calendar} from 'react-native-calendars'\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    // alignItems: 'center',\n    // justifyContent: 'center',\n    backgroundColor: \"#FFFDF6\",\n    width: \"100%\"\n  },\n  dotsDescription:{\n    flexDirection:\"row\",\n    justifyContent:\"space-around\",\n    backgroundColor:\"#fff\",\n    paddingBottom:2,\n    borderBottomWidth: 1,\n    borderBottomColor: \"#ddd\",\n  },\n  dotItem:{\n    flexDirection:\"row\",\n  }\n  \n});\nconst older = ((a,b)=>(a.date.seconds - b.date.seconds))\n\n\nconst  FoodManagementScreen = (props)=> {\n  \n  dateToString = (date)=>{\n    const str = date.toDate().toISOString();\n    return str.split(\"T\")[0]\n  }\n  const [foodData,setFoodData] = useState([])\n  const [kcalList,setKcalList] = useState([])\n  const [currentDay,setCurrentDay] = useState(new Date().toISOString().split(\"T\")[0],)\n  const [requiredKcal,setRequiredKcal] = useState([])\n  \n  \n  useEffect(()=>{\n    const {currentUser} = firebase.auth();\n    const db =firebase.firestore()\n\n    db.collection(`users/${currentUser.uid}/food`)\n    .onSnapshot((querySnapshot)=>{\n      const foodData =[];\n      //firebaseから食事データを取得\n      querySnapshot.forEach((doc)=>{\n        foodData.push({...doc.data(),key: doc.id})\n      })\n      setFoodData(foodData)\n      const sortedKcalData = [...foodData].sort(older)\n      for(let i = 0; i < sortedKcalData.length ; i++){\n        if(i === 0){\n          kcalList.push(\n          {kcal:parseFloat(sortedKcalData[0].kcal),\n            date:dateToString(sortedKcalData[0].date)})\n        }else{\n          if(dateToString(sortedKcalData[i].date) === dateToString(sortedKcalData[i -1].date)){\n            kcalList[kcalList.length-1].kcal += parseFloat(sortedKcalData[i].kcal)\n          }else{\n            kcalList.push({kcal:parseFloat(sortedKcalData[i].kcal),date:dateToString(sortedKcalData[i].date)})\n            }\n        }\n      }\n\n      if(kcalList.length == 0){\n        setKcalList()\n      }else{\n        setKcalList(kcalList)\n      }\n    })\n    \n   db.collection(`users/${currentUser.uid}/personalData`)\n   .onSnapshot((querySnapshot)=>{\n      const personalData = []\n      querySnapshot.forEach((doc)=>{\n        personalData.push({...doc.data(),key: doc.id})\n      })\n      setRequiredKcal(personalData[0].requiredKcal)\n    })\n\n    return () => {console.log('Clean Up ')};\n   },[])\n\n    const todayFoodList = foodData.filter((item,index,)=>{\n      if (dateToString(item.date) === currentDay){\n        return true\n          }\n    })\n\n    const todaysFoodData = [...todayFoodList].sort(older)\n\n    const markedDays = [0]\n\n    kcalList.forEach((i)=>{\n      if(requiredKcal - i.kcal >= 0){\n        markedDays.push({\n          date:i.date,\n          dot:{dots:[{color:\"green\"}]}\n        })\n      }else if(requiredKcal - i.kcal < 0){\n        markedDays.push({\n          date:i.date,\n          dot:{dots:[{color:\"red\"}]}\n        })\n      }\n    })\n    const dotDays = Object.assign(...markedDays.map(item => ({ [item.date]: item.dot })))\n    const markedDates = {...dotDays,[currentDay]:{selected:true,selectedColor:\"#ffa500\"}}\n\n    \n\n\n    return (\n      <View style={styles.container}>\n          <Calendar \n          onDayPress = {((day)=>{setCurrentDay(day.dateString)})}\n          style={{\n            height: 350,\n            width:\"100%\",\n            borderColor: 'gray',\n          }}\n          markedDates = {\n            markedDates\n          }\n          markingType={'multi-dot'}\n          />\n          <View style={styles.dotsDescription}>\n            <View style={styles.dotItem}>\n              <Text style={{color:\"green\",fontWeight:\"bold\"}}>・</Text>\n              <Text>適正カロリー</Text>\n            </View>\n            <View style={styles.dotItem}>\n              <Text style={{color:\"red\",fontWeight:\"bold\"}}>・</Text>\n              <Text>カロリーオーバー</Text>\n            </View>\n          </View>\n        \n          <FoodList \n            foodData={todaysFoodData}\n            navigation={props.navigation}/>\n        <CircleButton name={\"plus\"} onPress={()=>props.navigation.navigate(\"FoodAdd\")}/>\n      </View>\n    ); \n  \n}\n\nexport default FoodManagementScreen"]},"metadata":{},"sourceType":"module"}