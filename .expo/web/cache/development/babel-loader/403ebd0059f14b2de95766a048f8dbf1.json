{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/aichibaseball/training-management-app/src/screens/WeightManagementScreen.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport CircleButton from \"../elements/CircleButton\";\nimport firebase from \"firebase\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FFFDF6\",\n    width: \"100%\"\n  },\n  label: {\n    fontSize: 32,\n    padding: 20\n  },\n  wightManagementLabel: {\n    paddingTop: 32,\n    paddingLeft: 16,\n    paddingRight: 16,\n    paddingBottom: 16,\n    fontSize: 24,\n    margin: 10,\n    backgroundColor: \"#fff\",\n    textAlign: \"center\",\n    width: \"80%\"\n  },\n  inputLocation: {\n    flexDirection: \"row\"\n  },\n  unit: {\n    fontSize: 30,\n    marginTop: 40\n  }\n});\n\nvar WeightManagementScreen = function WeightManagementScreen(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      weight = _useState2[0],\n      setWeight = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      bodyFatPercentage = _useState4[0],\n      setBodyFatPercentage = _useState4[1];\n\n  var handleSubmit = function handleSubmit() {\n    console.log(\"press\");\n    var db = firebase.firestore();\n\n    var _firebase$auth = firebase.auth(),\n        currentUser = _firebase$auth.currentUser;\n\n    db.collection(\"users/\" + currentUser.uid + \"/trainingMenu\").add({\n      weight: weight,\n      bodyFatPercentage: bodyFatPercentage,\n      date: new Date()\n    }).then(function () {\n      props.navigation.navigate(\"Home\");\n      console.log(\"then\");\n    }).catch(function (error) {\n      console.error(\"Error adding document: \", error);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"\\u4F53\\u91CD\\uFF08kg\\uFF09\"), React.createElement(View, {\n    style: styles.inputLocation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    multiline: true,\n    style: styles.wightManagementLabel,\n    value: weight,\n    onChangeText: function onChangeText(text) {\n      return setWeight(text);\n    },\n    placeholder: \"\\u3053\\u3053\\u306B\\u5165\\u529B\",\n    keyboardType: \"numeric\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.unit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"kg\"))), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"\\u4F53\\u8102\\u80AA\\u7387\\x1C\\x1C\\uFF08\\uFF05\\uFF09\"), React.createElement(View, {\n    style: styles.inputLocation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    multiline: true,\n    style: styles.wightManagementLabel,\n    value: bodyFatPercentage,\n    onChangeText: function onChangeText(text) {\n      return setBodyFatPercentage(text);\n    },\n    placeholder: \"\\u3053\\u3053\\u306B\\u5165\\u529B\",\n    keyboardType: \"numeric\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.unit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"%\"))), React.createElement(CircleButton, {\n    name: \"check\",\n    onPress: handleSubmit,\n    placeholder: \"body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default WeightManagementScreen;","map":{"version":3,"sources":["/Users/aichibaseball/training-management-app/src/screens/WeightManagementScreen.js"],"names":["React","useState","CircleButton","firebase","styles","StyleSheet","create","container","flex","backgroundColor","width","label","fontSize","padding","wightManagementLabel","paddingTop","paddingLeft","paddingRight","paddingBottom","margin","textAlign","inputLocation","flexDirection","unit","marginTop","WeightManagementScreen","props","weight","setWeight","bodyFatPercentage","setBodyFatPercentage","handleSubmit","console","log","db","firestore","auth","currentUser","collection","uid","add","date","Date","then","navigation","navigate","catch","error","text"],"mappings":"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","sourcesContent":["import React ,{useState}from 'react';\nimport { StyleSheet, View, TextInput,Text,  } from 'react-native';\nimport CircleButton from \"../elements/CircleButton\"\nimport firebase from \"firebase\"\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FFFDF6\",\n    width: \"100%\"\n  },\n  label : {\n    fontSize: 32,\n    padding : 20,\n  },\n  wightManagementLabel: {\n    paddingTop: 32,\n    paddingLeft: 16,\n    paddingRight: 16,\n    paddingBottom: 16,\n    fontSize: 24,\n    margin: 10,\n    backgroundColor: \"#fff\",\n    textAlign: \"center\",\n    width: \"80%\"\n  },\n  inputLocation :{\n    flexDirection : \"row\",\n  },\n  unit : {\n    fontSize : 30,\n    marginTop :40,\n  },\n});\n\n\nconst WeightManagementScreen = (props) => {\n  const [weight,setWeight] =useState(\"\")\n  const [bodyFatPercentage,setBodyFatPercentage] =useState(\"\")\n\n  //体重の値が０の時エラーにある為、後日修正\n  const handleSubmit = () => {\n    console.log(\"press\")\n     const db = firebase.firestore();\n     const {currentUser} = firebase.auth();\n      db.collection(`users/${currentUser.uid}/trainingMenu`).add({\n           weight : weight,\n           bodyFatPercentage : bodyFatPercentage,\n           date: new Date()\n      })\n     .then(()=> {\n       props.navigation.navigate(\"Home\")\n       console.log(\"then\")\n     })\n     .catch((error)=>{\n       console.error(\"Error adding document: \", error);\n     });\n  }\n  \n  return (\n    <View style={styles.container}>\n      <View>\n        <Text style={styles.label}>体重（kg）</Text>\n        <View style={styles.inputLocation}>\n          <TextInput multiline style={styles.wightManagementLabel} value={weight}\n          onChangeText={text => setWeight(text)} placeholder=\"ここに入力\" keyboardType={\"numeric\"}/>\n          <Text style={styles.unit}>kg</Text>\n        </View>\n      </View>\n\n      <View>\n        <Text style={styles.label}>体脂肪率\u001c\u001c（％）</Text>\n        <View  style={styles.inputLocation}>\n          <TextInput multiline style={styles.wightManagementLabel} value={bodyFatPercentage}\n          onChangeText={text => setBodyFatPercentage(text)} placeholder=\"ここに入力\" keyboardType={\"numeric\"}/>\n          <Text style={styles.unit}>%</Text>\n        </View>\n      </View>\n      \n      <CircleButton name={\"check\"} onPress={handleSubmit} placeholder=\"body\"/>\n    </View>\n  );\n}\n\nexport default WeightManagementScreen"]},"metadata":{},"sourceType":"module"}