{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/aichibaseball/training-management-app/src/screens/TrainingManagementScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FoodList from \"../components/FoodList\";\nimport CircleButton from \"../elements/CircleButton\";\nimport firebase from \"firebase\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: \"#FFFDF6\",\n    width: \"100%\"\n  }\n});\n\ndateToString = function dateToString(date) {\n  var str = date.toDate().toISOString();\n  return str.split(\"T\")[0];\n};\n\nvar WorkOutManagementScreen = function WorkOutManagementScreen(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      foodList = _useState2[0],\n      setFoodList = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      workOut = _useState4[0],\n      setWorkOut = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      weight = _useState6[0],\n      setWeight = _useState6[1];\n\n  var _useState7 = useState(new Date().toISOString().split(\"T\")[0]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      currentDay = _useState8[0],\n      setCurrentDay = _useState8[1];\n\n  var foodData = props.route.params.foodData;\n  useEffect(function () {\n    var _firebase$auth = firebase.auth(),\n        currentUser = _firebase$auth.currentUser;\n\n    var db = firebase.firestore();\n    db.collection(\"users/\" + currentUser.uid + \"/trainingMenu\").onSnapshot(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        console.log(doc.data(), \"training\");\n      });\n    });\n    var todayFoodList = foodData.filter(function (item, index) {\n      if (dateToString(item.date) === currentDay) {\n        return true;\n      }\n    });\n\n    var sortedFoodData = _toConsumableArray(todayFoodList).sort(function (a, b) {\n      return a.date.seconds - b.date.seconds;\n    });\n\n    setFoodList(sortedFoodData);\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, React.createElement(FoodList, {\n    foodList: foodList,\n    navigation: props.navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }), React.createElement(CircleButton, {\n    name: \"plus\",\n    onPress: function onPress() {\n      return props.navigation.navigate(\"FoodAdd\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default WorkOutManagementScreen;","map":{"version":3,"sources":["/Users/aichibaseball/training-management-app/src/screens/TrainingManagementScreen.js"],"names":["React","useState","useEffect","FoodList","CircleButton","firebase","styles","StyleSheet","create","container","flex","alignItems","justifyContent","backgroundColor","width","dateToString","date","str","toDate","toISOString","split","WorkOutManagementScreen","props","foodList","setFoodList","workOut","setWorkOut","weight","setWeight","Date","currentDay","setCurrentDay","foodData","route","params","auth","currentUser","db","firestore","collection","uid","onSnapshot","querySnapshot","forEach","doc","console","log","data","todayFoodList","filter","item","index","sortedFoodData","sort","a","b","seconds","navigation","navigate"],"mappings":"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","sourcesContent":["import React ,{useState,useEffect}from 'react';\nimport { StyleSheet, View,} from 'react-native';\nimport FoodList from \"../components/FoodList\"\nimport CircleButton from \"../elements/CircleButton\"\nimport firebase from \"firebase\"\n\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: \"#FFFDF6\",\n    width: \"100%\"\n  },\n  \n});\n dateToString = (date)=>{\n  const str = date.toDate().toISOString();\n  return str.split(\"T\")[0]\n}\n\nconst  WorkOutManagementScreen = (props)=> {\n  const [foodList,setFoodList] = useState([])\n  const [workOut,setWorkOut] = useState([])\n  const [weight,setWeight] = useState()\n  const [currentDay,setCurrentDay] = useState(new Date().toISOString().split(\"T\")[0],)\n  const {foodData} = props.route.params\n  useEffect(()=>{\n\n    const {currentUser} = firebase.auth();\n    const db =firebase.firestore()\n    db.collection(`users/${currentUser.uid}/trainingMenu`)\n     .onSnapshot((querySnapshot)=>{\n       querySnapshot.forEach((doc)=>{\n         console.log(doc.data(),\"training\")\n       })\n     })\n       const todayFoodList = foodData.filter((item,index,)=>{\n         if (dateToString(item.date) === currentDay){\n           return true\n         }\n       })\n       const sortedFoodData = [...todayFoodList].sort((a,b)=>(a.date.seconds - b.date.seconds))\n       setFoodList(sortedFoodData)\n  },[])\n    \n  \n  \n\n \n    return (\n      <View style={styles.container}>\n          <FoodList \n            foodList={foodList}\n            navigation={props.navigation}/>\n        <CircleButton name={\"plus\"} onPress={()=>props.navigation.navigate(\"FoodAdd\")}/>\n      </View>\n    ); \n  \n}\n\nexport default WorkOutManagementScreen"]},"metadata":{},"sourceType":"module"}