{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/aichibaseball/training-management-app/src/screens/HomeScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport firebase from \"firebase\";\nimport { LineChart } from \"react-native-chart-kit\";\nimport CircleButton from \"../elements/CircleButton\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FFFDF6\",\n    width: \"100%\"\n  },\n  upperContainer: {\n    flexDirection: \"row\",\n    padding: 20,\n    paddingRight: 30\n  },\n  upperLeft: {\n    width: \"50%\"\n  },\n  upperContainerTitle: {\n    fontSize: 18,\n    alignSelf: \"flex-end\"\n  },\n  upperContainerText: {\n    fontSize: 22,\n    alignSelf: \"flex-end\"\n  },\n  lineChart: {\n    alignItems: \"center\"\n  },\n  button: {\n    backgroundColor: \"green\",\n    height: 48,\n    borderRadius: 14,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"80%\",\n    alignSelf: \"center\",\n    marginTop: 10\n  },\n  buttonTitle: {\n    fontSize: 20,\n    color: \"#fff\"\n  }\n});\nvar chartConfig = {\n  backgroundColor: '#fff',\n  backgroundGradientFrom: '#fff',\n  backgroundGradientTo: '#fff',\n  color: function color() {\n    var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0.5;\n    return \"rgba(0, 0, 0,0.5)\";\n  }\n};\n\nvar decimalPoint = function decimalPoint(y) {\n  return parseFloat(y).toFixed(1);\n};\n\nvar toInteger = function toInteger(y) {\n  return parseFloat(y).toFixed();\n};\n\nvar dateToString = function dateToString(date) {\n  var str = date.toDate().toISOString();\n  return str.split(\"T\")[0];\n};\n\nvar older = function older(a, b) {\n  return a.date.seconds - b.date.seconds;\n};\n\nvar HomeScreen = function HomeScreen(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      weightData = _useState2[0],\n      setWeightData = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      weightLabels = _useState4[0],\n      setWeightLabels = _useState4[1];\n\n  var _useState5 = useState([0]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      weightList = _useState6[0],\n      setWeightList = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      foodData = _useState8[0],\n      setFoodData = _useState8[1];\n\n  var _useState9 = useState([0]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      kcalList = _useState10[0],\n      setKcalList = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      currentKcal = _useState12[0],\n      setCurrentKcal = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      kcalLabels = _useState14[0],\n      setKcalLabels = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      requiredKcal = _useState16[0],\n      setRequiredKcal = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      targetWeight = _useState18[0],\n      setTargetWeight = _useState18[1];\n\n  useEffect(function () {\n    console.log(\"render\");\n\n    var _firebase$auth = firebase.auth(),\n        currentUser = _firebase$auth.currentUser;\n\n    var db = firebase.firestore();\n    db.collection(\"users/\" + currentUser.uid + \"/weight\").onSnapshot(function (querySnapshot) {\n      var weightData = [];\n      querySnapshot.forEach(function (doc) {\n        weightData.push(_objectSpread({}, doc.data(), {\n          key: doc.id\n        }));\n      });\n      var sortedWeightData = [].concat(weightData).sort(older);\n      setWeightData(weightData);\n      var weightLabels = [];\n      setWeightLabels(weightLabels);\n      sortedWeightData.forEach(function (a) {\n        weightLabels.push(dateToString(a.date).slice(5));\n      });\n      var weightList = [];\n      sortedWeightData.forEach(function (item) {\n        weightList.push(parseFloat(item.weight));\n      });\n\n      if (weightList.length == 0) {\n        setWeightList([0]);\n      } else {\n        setWeightList(weightList);\n      }\n    });\n    db.collection(\"users/\" + currentUser.uid + \"/food\").onSnapshot(function (querySnapshot) {\n      var foodData = [];\n      querySnapshot.forEach(function (doc) {\n        foodData.push(_objectSpread({}, doc.data(), {\n          key: doc.id\n        }));\n      });\n      setFoodData(foodData);\n      var kcalList = [];\n      var sortedKcalData = [].concat(foodData).sort(older);\n\n      for (var i = 0; i < sortedKcalData.length; i++) {\n        if (i === 0) {\n          kcalList.push(parseFloat(sortedKcalData[i].kcal));\n        } else {\n          if (dateToString(sortedKcalData[i].date) === dateToString(sortedKcalData[i - 1].date)) {\n            kcalList[kcalList.length - 1] += parseFloat(sortedKcalData[i].kcal);\n          } else {\n            kcalList.push(parseFloat(sortedKcalData[i].kcal));\n          }\n        }\n      }\n\n      if (kcalList.length == 0) {\n        setKcalList([0]);\n      } else {\n        setKcalList(kcalList);\n      }\n\n      setCurrentKcal(kcalList[kcalList.length - 1]);\n      var kcalLabels = [];\n\n      for (var _i = 0; _i < sortedKcalData.length; _i++) {\n        if (_i === 0) {\n          kcalLabels.push(dateToString(sortedKcalData[_i].date).slice(5));\n        } else {\n          if (dateToString(sortedKcalData[_i].date) === dateToString(sortedKcalData[_i - 1].date)) {} else {\n            kcalLabels.push(dateToString(sortedKcalData[_i].date).slice(5));\n          }\n        }\n      }\n\n      setKcalLabels(kcalLabels);\n    });\n    db.collection(\"users/\" + currentUser.uid + \"/personalData\").onSnapshot(function (querySnapshot) {\n      var personalData = [];\n      querySnapshot.forEach(function (doc) {\n        personalData.push(_objectSpread({}, doc.data(), {\n          key: doc.id\n        }));\n      });\n      setRequiredKcal(personalData[0].requiredKcal);\n      setTargetWeight(personalData[0].targetWeight);\n    });\n\n    if (weightData == null) {\n      return null;\n    }\n\n    if (foodData == null) {\n      return null;\n    }\n\n    return function () {\n      console.log('Clean Up ');\n    };\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.upperContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.upperLeft,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.upperContainerTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, \"\\u5FC5\\u8981\\u6442\\u53D6\\u30AB\\u30ED\\u30EA\\u30FC\\u307E\\u3067\"), React.createElement(Text, {\n    style: styles.upperContainerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, requiredKcal - currentKcal + \" kcal\")), React.createElement(View, {\n    style: styles.upperLeft,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.upperContainerTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }, \"\\u76EE\\u6A19\\u4F53\\u91CD\\u307E\\u3067\"), React.createElement(Text, {\n    style: styles.upperContainerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  }, Math.round((weightList[weightList.length - 1] - targetWeight) * 10) / 10 + \" kg\"))), React.createElement(LineChart, {\n    data: {\n      labels: weightLabels,\n      datasets: [{\n        data: weightList\n      }]\n    },\n    formatYLabel: decimalPoint,\n    yAxisSuffix: \" kg\",\n    style: styles.lineChart,\n    width: 400,\n    height: 200,\n    chartConfig: chartConfig,\n    withInnerLines: false,\n    withOuterLines: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }), React.createElement(LineChart, {\n    data: {\n      labels: kcalLabels,\n      datasets: [{\n        data: kcalList\n      }]\n    },\n    formatYLabel: toInteger,\n    yAxisSuffix: \"kcal\",\n    style: styles.lineChart,\n    width: 400,\n    height: 200,\n    chartConfig: chartConfig,\n    withInnerLines: false,\n    withOuterLines: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableHighlight, {\n    style: styles.button,\n    underlayColor: \"#C70F66\",\n    onPress: function onPress() {\n      return props.navigation.navigate(\"TrainingManagement\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }\n  }, \"\\u4ECA\\u65E5\\u306E\\u30C8\\u30EC\\u30FC\\u30CB\\u30F3\\u30B0\")), React.createElement(TouchableHighlight, {\n    style: styles.button,\n    underlayColor: \"#C70F66\",\n    onPress: function onPress() {\n      return props.navigation.navigate(\"FoodManagement\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }\n  }, \"\\u4ECA\\u65E5\\u306E\\u98DF\\u4E8B\")), React.createElement(TouchableHighlight, {\n    style: styles.button,\n    underlayColor: \"#C70F66\",\n    onPress: function onPress() {\n      return props.navigation.navigate(\"WeightManagement\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }\n  }, \"\\u4ECA\\u65E5\\u306E\\u4F53\\u91CD\")), React.createElement(CircleButton, {\n    name: \"cog\",\n    onPress: function onPress() {\n      return props.navigation.navigate(\"FoodAdd\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default HomeScreen;","map":{"version":3,"sources":["/Users/aichibaseball/training-management-app/src/screens/HomeScreen.js"],"names":["React","useState","useEffect","firebase","LineChart","CircleButton","styles","StyleSheet","create","container","flex","backgroundColor","width","upperContainer","flexDirection","padding","paddingRight","upperLeft","upperContainerTitle","fontSize","alignSelf","upperContainerText","lineChart","alignItems","button","height","borderRadius","justifyContent","marginTop","buttonTitle","color","chartConfig","backgroundGradientFrom","backgroundGradientTo","opacity","decimalPoint","y","parseFloat","toFixed","toInteger","dateToString","date","str","toDate","toISOString","split","older","a","b","seconds","HomeScreen","props","weightData","setWeightData","weightLabels","setWeightLabels","weightList","setWeightList","foodData","setFoodData","kcalList","setKcalList","currentKcal","setCurrentKcal","kcalLabels","setKcalLabels","requiredKcal","setRequiredKcal","targetWeight","setTargetWeight","console","log","auth","currentUser","db","firestore","collection","uid","onSnapshot","querySnapshot","forEach","doc","push","data","key","id","sortedWeightData","sort","slice","item","weight","length","sortedKcalData","i","kcal","personalData","Math","round","labels","datasets","navigation","navigate"],"mappings":"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","sourcesContent":["import React ,{useState,useEffect}from 'react';\nimport { StyleSheet, View, Text,TouchableHighlight } from 'react-native';\nimport firebase from \"firebase\"\nimport {LineChart} from \"react-native-chart-kit\"\nimport CircleButton from \"../elements/CircleButton\"\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FFFDF6\",\n    width: \"100%\"\n  },\n  upperContainer :{\n    flexDirection: \"row\",\n    padding:20,\n    paddingRight:30,\n  },\n  upperLeft:{\n    width:\"50%\",\n  }\n  ,\n  upperContainerTitle : {\n    fontSize: 18,\n    alignSelf: \"flex-end\"\n  },\n  upperContainerText : {\n    fontSize: 22,\n    alignSelf: \"flex-end\"\n  },\n  lineChart: {\n    alignItems: \"center\",\n  },\n  button: {\n    backgroundColor: \"green\",\n    height: 48,\n    borderRadius: 14,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"80%\",\n    alignSelf: \"center\",\n    marginTop: 10,\n  },\n  buttonTitle: {\n    fontSize:20,\n    color: \"#fff\",\n  },\n});\n\nconst chartConfig = {\n  backgroundColor: '#fff',\n  backgroundGradientFrom: '#fff',\n  backgroundGradientTo: '#fff',\n  color: (opacity = 0.5) => `rgba(0, 0, 0,0.5)`,\n}\n\n\nconst decimalPoint  = (y)=>{\nreturn parseFloat(y).toFixed(1)\n}\n\nconst toInteger = (y)=>{\n  return parseFloat(y).toFixed()\n}\n\nconst dateToString = (date)=>{\n  const str = date.toDate().toISOString();\n  return str.split(\"T\")[0] \n}\n\nconst older = ((a,b)=>(a.date.seconds - b.date.seconds))\n\n\n\n\nconst HomeScreen = (props)=> {\n  const [weightData,setWeightData] = useState([])\n  const [weightLabels,setWeightLabels] = useState([])\n  const [weightList,setWeightList] = useState([0])\n  const [foodData,setFoodData] = useState([])\n  const [kcalList,setKcalList] = useState([0])\n  const [currentKcal,setCurrentKcal] = useState([])\n  const [kcalLabels,setKcalLabels] = useState([])\n  const [requiredKcal,setRequiredKcal] = useState([])\n  const [targetWeight,setTargetWeight] = useState([])\n     \n  useEffect (()=>{\n    console.log(\"render\")\n    const {currentUser} = firebase.auth();\n    const db =firebase.firestore()\n\n    db.collection(`users/${currentUser.uid}/weight`)\n    .onSnapshot((querySnapshot)=>{\n      const weightData =[];\n      //firebaseから体重データを取得\n      querySnapshot.forEach((doc)=>{\n        weightData.push({...doc.data(),key: doc.id})\n      })\n      const sortedWeightData = [...weightData].sort(older)\n      setWeightData(weightData)\n      //日付の取得\n      const weightLabels = [];\n      setWeightLabels(weightLabels)\n      sortedWeightData.forEach((a)=>{\n        weightLabels.push(dateToString(a.date).slice(5))\n      })\n\n      //体重の値の取得\n      const weightList =[]\n      sortedWeightData.forEach((item)=>{\n        weightList.push(parseFloat(item.weight))\n      })\n      if(weightList.length == 0){\n        setWeightList([0])\n      }else{\n        setWeightList(weightList)\n      }\n    })\n\n    db.collection(`users/${currentUser.uid}/food`)\n    .onSnapshot((querySnapshot)=>{\n      const foodData =[];\n      //firebaseから食事データを取得\n      querySnapshot.forEach((doc)=>{\n        foodData.push({...doc.data(),key: doc.id})\n        })\n      setFoodData(foodData)\n      \n      //kcalの加工\n      const kcalList =[]\n      const sortedKcalData = [...foodData].sort(older)\n      for(let i = 0; i < sortedKcalData.length ; i++){\n        if(i === 0){\n          kcalList.push(parseFloat(sortedKcalData[i].kcal))\n        }else{\n          if(dateToString(sortedKcalData[i].date) === dateToString(sortedKcalData[i -1].date)){\n            kcalList[kcalList.length-1] += parseFloat(sortedKcalData[i].kcal)\n          }else{\n              kcalList.push(parseFloat(sortedKcalData[i].kcal))\n            }\n        }\n      }\n      if(kcalList.length == 0){\n        setKcalList([0])\n      }else{\n        setKcalList(kcalList)\n      }  \n      setCurrentKcal(kcalList[kcalList.length-1]) \n\n\n      //kcalLabelの加工\n      const kcalLabels = [];\n      for (let i = 0; i < sortedKcalData.length; i++){\n        if(i === 0){\n          kcalLabels.push(dateToString(sortedKcalData[i].date).slice(5))\n        }else {\n          if(dateToString(sortedKcalData[i].date) === dateToString(sortedKcalData[i -1].date)){\n          }else{\n              kcalLabels.push(dateToString(sortedKcalData[i].date).slice(5))\n            }\n        }\n      }\n      setKcalLabels(kcalLabels)\n    })\n\n    \n    db.collection(`users/${currentUser.uid}/personalData`)\n    .onSnapshot((querySnapshot)=>{\n      const personalData = []\n      querySnapshot.forEach((doc)=>{\n        personalData.push({...doc.data(),key: doc.id})\n      })\n      setRequiredKcal(personalData[0].requiredKcal)\n      setTargetWeight(personalData[0].targetWeight)\n    })\n\n      if (weightData == null) { return null; }\n      if (foodData == null) { return null; }\n     return () => {console.log('Clean Up ')};\n  },[])\n\n  \n        \n  \n  return (\n    <View style={styles.container}>\n      <View  style={styles.upperContainer}>\n        <View style={styles.upperLeft}>\n          <Text style={styles.upperContainerTitle}>必要摂取カロリーまで</Text>\n          <Text style={styles.upperContainerText}>{`${requiredKcal-currentKcal} kcal`}</Text>\n        </View>\n\n        <View style={styles.upperLeft}>\n          <Text style={styles.upperContainerTitle}>目標体重まで</Text>\n          <Text style={styles.upperContainerText}>{`${Math.round((weightList[weightList.length-1]-targetWeight)*10)/10} kg`}</Text>\n        </View>\n      </View>\n        <LineChart \n          data = {{\n            labels: weightLabels,\n            datasets: [{data:weightList}]\n          }}\n          formatYLabel={decimalPoint}\n          yAxisSuffix=\" kg\"\n          style={styles.lineChart} \n          width={400} height={200} \n          chartConfig={chartConfig}\n          withInnerLines={false}\n          withOuterLines={false}\n        />\n        <LineChart \n          data = {{\n              labels: kcalLabels,\n              datasets: [{data:kcalList}\n          ]}\n        }\n          formatYLabel={toInteger}\n          yAxisSuffix=\"kcal\"\n          style={styles.lineChart} \n          width={400} height={200} \n          chartConfig={chartConfig}\n          withInnerLines={false}\n          withOuterLines={false}\n          /> \n\n      <TouchableHighlight style={styles.button} underlayColor=\"#C70F66\"\n        onPress={()=>props.navigation.navigate(\"TrainingManagement\")}>\n        <Text style={styles.buttonTitle}>今日のトレーニング\n        </Text>\n      </TouchableHighlight> \n\n      <TouchableHighlight style={styles.button} \n        underlayColor=\"#C70F66\"\n        onPress={()=>props.navigation.navigate(\"FoodManagement\")}>\n        <Text style={styles.buttonTitle}>今日の食事</Text>\n      </TouchableHighlight>\n\n      <TouchableHighlight style={styles.button} underlayColor=\"#C70F66\"\n        onPress={()=>props.navigation.navigate(\"WeightManagement\")}>\n      <Text style={styles.buttonTitle} >今日の体重</Text>\n      </TouchableHighlight>\n      <CircleButton name={\"cog\"} onPress={()=>props.navigation.navigate(\"FoodAdd\")}/>\n    </View>\n  ); \n  \n}\n\nexport default HomeScreen"]},"metadata":{},"sourceType":"module"}