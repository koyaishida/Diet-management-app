{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/aichibaseball/training-management-app/src/screens/TrainingManagementScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TrainingList from \"../components/TrainingList\";\nimport CircleButton from \"../elements/CircleButton\";\nimport firebase from \"firebase\";\nimport { Calendar } from 'react-native-calendars';\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FFFDF6\",\n    width: \"100%\"\n  },\n  trainingDay: {\n    textAlign: \"center\",\n    fontSize: 20,\n    fontWeight: \"bold\",\n    backgroundColor: \"green\",\n    color: \"#fff\"\n  }\n});\n\nvar dateToString = function dateToString(date) {\n  var str = date.toDate().toISOString();\n  return str.split(\"T\")[0];\n};\n\nvar older = function older(a, b) {\n  return a.date.seconds - b.date.seconds;\n};\n\nvar TrainingManagementScreen = function TrainingManagementScreen(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      trainingList = _useState2[0],\n      setTrainingList = _useState2[1];\n\n  var _useState3 = useState(new Date().toISOString().split(\"T\")[0]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentDay = _useState4[0],\n      setCurrentDay = _useState4[1];\n\n  useEffect(function () {\n    var _firebase$auth = firebase.auth(),\n        currentUser = _firebase$auth.currentUser;\n\n    var db = firebase.firestore();\n    db.collection(\"users/\" + currentUser.uid + \"/trainingMemoList\").onSnapshot(function (querySnapshot) {\n      var trainingList = [];\n      querySnapshot.forEach(function (doc) {\n        trainingList.push(_objectSpread({}, doc.data(), {\n          key: doc.id\n        }));\n      });\n      setTrainingList(trainingList);\n    });\n  }, []);\n  var todayTrainingList = trainingList.filter(function (item, index) {\n    if (dateToString(item.date) === currentDay) {\n      return true;\n    }\n  });\n\n  var sortedTrainingList = _toConsumableArray(todayTrainingList).sort(older);\n\n  var dotTrainingList = _toConsumableArray(trainingList).sort(older);\n\n  var dotList = dotTrainingList.map(function (item) {\n    return {\n      date: dateToString(item.date),\n      part: item.part\n    };\n  });\n  var markedList = [0];\n  var breast = \"red\";\n  var back = \"green\";\n  var shoulder = \"blue\";\n  var arm = \"yellow\";\n  var leg = \"purple\";\n  var other = \"black\";\n\n  var _loop = function _loop(i) {\n    var addMarkedList = function addMarkedList(dotColor) {\n      markedList.push({\n        date: [dotList[i].date],\n        dot: {\n          dots: [{\n            color: dotColor\n          }]\n        }\n      });\n    };\n\n    var addDots = function addDots(dotColor) {\n      markedList[markedList.length - 1].dot.dots.push({\n        color: dotColor\n      });\n    };\n\n    if (i == 0 || dotList[i].date !== dotList[i - 1].date) {\n      if (dotList[i].part == \"胸\") {\n        addMarkedList(breast);\n      } else if (dotList[i].part == \"背中\") {\n        addMarkedList(back);\n      } else if (dotList[i].part == \"肩\") {\n        addMarkedList(shoulder);\n      } else if (dotList[i].part == \"腕\") {\n        addMarkedList(arm);\n      } else if (dotList[i].part == \"脚\") {\n        addMarkedList(leg);\n      } else if (dotList[i].part == \"その他\") {\n        addMarkedList(other);\n      }\n    } else if (i > 0) {\n      if (dotList[i].date == dotList[i - 1].date && dotList[i].part !== dotList[i - 1].part) {\n        if (dotList[i].part == \"胸\") {\n          addDots(breast);\n        } else if (dotList[i].part == \"背中\") {\n          addDots(back);\n        } else if (dotList[i].part == \"肩\") {\n          addDots(shoulder);\n        } else if (dotList[i].part == \"腕\") {\n          addDots(arm);\n        } else if (dotList[i].part == \"脚\") {\n          addDots(leg);\n        } else if (dotList[i].part == \"その他\") {\n          addDots(other);\n        }\n      } else if (dotList[i].date == dotList[i - 1].date && dotList[i].part == dotList[i - 1].part) {}\n    }\n  };\n\n  for (var i = 0; i < dotList.length; i++) {\n    _loop(i);\n  }\n\n  var dotDays = Object.assign.apply(Object, _toConsumableArray(markedList.map(function (item) {\n    return _defineProperty({}, item.date, item.dot);\n  })));\n\n  var markedDays = _objectSpread({}, dotDays, _defineProperty({}, currentDay, {\n    selected: true,\n    selectedColor: \"#ffa500\"\n  }));\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, React.createElement(Calendar, {\n    onDayPress: function onDayPress(day) {\n      setCurrentDay(day.dateString);\n    },\n    style: {\n      borderColor: 'gray',\n      height: 350,\n      width: \"100%\"\n    },\n    markedDates: markedDays,\n    markingType: 'multi-dot',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.trainingDay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, currentDay, \"\\u306E\\u30C8\\u30EC\\u30FC\\u30CB\\u30F3\\u30B0\\u8A18\\u9332\"), React.createElement(TrainingList, {\n    trainingList: sortedTrainingList,\n    navigation: props.navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }), React.createElement(CircleButton, {\n    name: \"plus\",\n    onPress: function onPress() {\n      return props.navigation.navigate(\"TrainingMenu\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default TrainingManagementScreen;","map":{"version":3,"sources":["/Users/aichibaseball/training-management-app/src/screens/TrainingManagementScreen.js"],"names":["React","useState","useEffect","TrainingList","CircleButton","firebase","Calendar","styles","StyleSheet","create","container","flex","backgroundColor","width","trainingDay","textAlign","fontSize","fontWeight","color","dateToString","date","str","toDate","toISOString","split","older","a","b","seconds","TrainingManagementScreen","props","trainingList","setTrainingList","Date","currentDay","setCurrentDay","auth","currentUser","db","firestore","collection","uid","onSnapshot","querySnapshot","forEach","doc","push","data","key","id","todayTrainingList","filter","item","index","sortedTrainingList","sort","dotTrainingList","dotList","map","part","markedList","breast","back","shoulder","arm","leg","other","i","addMarkedList","dotColor","dot","dots","addDots","length","dotDays","Object","assign","markedDays","selected","selectedColor","day","dateString","borderColor","height","navigation","navigate"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAuC,OAAvC;;;;AAEA,OAAOC,YAAP;AACA,OAAOC,YAAP;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAAQC,QAAR,QAAuB,wBAAvB;AAIA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,SAFR;AAGTC,IAAAA,KAAK,EAAE;AAHE,GADoB;AAM/BC,EAAAA,WAAW,EAAC;AACVC,IAAAA,SAAS,EAAC,QADA;AAEVC,IAAAA,QAAQ,EAAC,EAFC;AAGVC,IAAAA,UAAU,EAAC,MAHD;AAIVL,IAAAA,eAAe,EAAC,OAJN;AAKVM,IAAAA,KAAK,EAAC;AALI;AANmB,CAAlB,CAAf;;AAcA,IAAOC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAQ;AAC5B,MAAMC,GAAG,GAAGD,IAAI,CAACE,MAAL,GAAcC,WAAd,EAAZ;AACA,SAAOF,GAAG,CAACG,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAP;AACD,CAHD;;AAIA,IAAMC,KAAK,GAAI,SAATA,KAAS,CAACC,CAAD,EAAGC,CAAH;AAAA,SAAQD,CAAC,CAACN,IAAF,CAAOQ,OAAP,GAAiBD,CAAC,CAACP,IAAF,CAAOQ,OAAhC;AAAA,CAAf;;AAEA,IAAOC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACC,KAAD,EAAU;AAAA,kBACH7B,QAAQ,CAAC,EAAD,CADL;AAAA;AAAA,MACnC8B,YADmC;AAAA,MACtBC,eADsB;;AAAA,mBAEP/B,QAAQ,CAAC,IAAIgC,IAAJ,GAAWV,WAAX,GAAyBC,KAAzB,CAA+B,GAA/B,EAAoC,CAApC,CAAD,CAFD;AAAA;AAAA,MAEnCU,UAFmC;AAAA,MAExBC,aAFwB;;AAI1CjC,EAAAA,SAAS,CAAC,YAAI;AAAA,yBAEUG,QAAQ,CAAC+B,IAAT,EAFV;AAAA,QAELC,WAFK,kBAELA,WAFK;;AAGZ,QAAMC,EAAE,GAAEjC,QAAQ,CAACkC,SAAT,EAAV;AAEAD,IAAAA,EAAE,CAACE,UAAH,YAAuBH,WAAW,CAACI,GAAnC,wBACEC,UADF,CACa,UAACC,aAAD,EAAiB;AAC3B,UAAMZ,YAAY,GAAG,EAArB;AACAY,MAAAA,aAAa,CAACC,OAAd,CAAsB,UAACC,GAAD,EAAO;AAC3Bd,QAAAA,YAAY,CAACe,IAAb,mBAAsBD,GAAG,CAACE,IAAJ,EAAtB;AAAiCC,UAAAA,GAAG,EAAEH,GAAG,CAACI;AAA1C;AACD,OAFD;AAGAjB,MAAAA,eAAe,CAACD,YAAD,CAAf;AACF,KAPD;AAUD,GAfQ,EAeP,EAfO,CAAT;AAgBA,MAAMmB,iBAAiB,GAAGnB,YAAY,CAACoB,MAAb,CAAoB,UAACC,IAAD,EAAMC,KAAN,EAAe;AAC3D,QAAIlC,YAAY,CAACiC,IAAI,CAAChC,IAAN,CAAZ,KAA4Bc,UAAhC,EAA2C;AACzC,aAAO,IAAP;AACD;AACF,GAJyB,CAA1B;;AAKA,MAAMoB,kBAAkB,GAAG,mBAAIJ,iBAAJ,EAAuBK,IAAvB,CAA4B9B,KAA5B,CAA3B;;AACA,MAAM+B,eAAe,GAAG,mBAAIzB,YAAJ,EAAkBwB,IAAlB,CAAuB9B,KAAvB,CAAxB;;AAGA,MAAMgC,OAAO,GAAGD,eAAe,CAACE,GAAhB,CAAoB,UAACN,IAAD,EAAQ;AAC1C,WAAO;AAAChC,MAAAA,IAAI,EAACD,YAAY,CAACiC,IAAI,CAAChC,IAAN,CAAlB;AAA8BuC,MAAAA,IAAI,EAACP,IAAI,CAACO;AAAxC,KAAP;AACD,GAFe,CAAhB;AAKA,MAAMC,UAAU,GAAG,CAAC,CAAD,CAAnB;AACA,MAAMC,MAAM,GAAG,KAAf;AACA,MAAMC,IAAI,GAAG,OAAb;AACA,MAAMC,QAAQ,GAAG,MAAjB;AACA,MAAMC,GAAG,GAAG,QAAZ;AACA,MAAMC,GAAG,GAAG,QAAZ;AACA,MAAMC,KAAK,GAAG,OAAd;;AAxC0C,6BA2ClCC,CA3CkC;AA4CxC,QAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,QAAD,EAAY;AAChCT,MAAAA,UAAU,CAACd,IAAX,CAAgB;AACd1B,QAAAA,IAAI,EAAC,CAACqC,OAAO,CAACU,CAAD,CAAP,CAAW/C,IAAZ,CADS;AAEdkD,QAAAA,GAAG,EAAC;AAACC,UAAAA,IAAI,EAAC,CAAC;AAACrD,YAAAA,KAAK,EAACmD;AAAP,WAAD;AAAN;AAFU,OAAhB;AAID,KALD;;AAMA,QAAMG,OAAO,GAAG,SAAVA,OAAU,CAACH,QAAD,EAAY;AAC1BT,MAAAA,UAAU,CAACA,UAAU,CAACa,MAAX,GAAkB,CAAnB,CAAV,CAAgCH,GAAhC,CAAoCC,IAApC,CAAyCzB,IAAzC,CAA8C;AAAC5B,QAAAA,KAAK,EAACmD;AAAP,OAA9C;AACD,KAFD;;AAGA,QAAGF,CAAC,IAAI,CAAL,IAAUV,OAAO,CAACU,CAAD,CAAP,CAAW/C,IAAX,KAAoBqC,OAAO,CAACU,CAAC,GAAC,CAAH,CAAP,CAAa/C,IAA9C,EAAmD;AACjD,UAAGqC,OAAO,CAACU,CAAD,CAAP,CAAWR,IAAX,IAAmB,GAAtB,EAA0B;AACxBS,QAAAA,aAAa,CAACP,MAAD,CAAb;AACD,OAFD,MAGK,IAAGJ,OAAO,CAACU,CAAD,CAAP,CAAWR,IAAX,IAAkB,IAArB,EAA0B;AAC7BS,QAAAA,aAAa,CAACN,IAAD,CAAb;AACD,OAFI,MAGA,IAAGL,OAAO,CAACU,CAAD,CAAP,CAAWR,IAAX,IAAiB,GAApB,EAAwB;AAC3BS,QAAAA,aAAa,CAACL,QAAD,CAAb;AACD,OAFI,MAGA,IAAGN,OAAO,CAACU,CAAD,CAAP,CAAWR,IAAX,IAAiB,GAApB,EAAwB;AAC3BS,QAAAA,aAAa,CAACJ,GAAD,CAAb;AACD,OAFI,MAGA,IAAGP,OAAO,CAACU,CAAD,CAAP,CAAWR,IAAX,IAAiB,GAApB,EAAwB;AAC3BS,QAAAA,aAAa,CAACH,GAAD,CAAb;AACD,OAFI,MAEC,IAAGR,OAAO,CAACU,CAAD,CAAP,CAAWR,IAAX,IAAiB,KAApB,EAA0B;AAC9BS,QAAAA,aAAa,CAACF,KAAD,CAAb;AACD;AACF,KAlBD,MAkBM,IAAGC,CAAC,GAAG,CAAP,EAAS;AACZ,UAAGV,OAAO,CAACU,CAAD,CAAP,CAAW/C,IAAX,IAAmBqC,OAAO,CAACU,CAAC,GAAC,CAAH,CAAP,CAAa/C,IAAhC,IAAwCqC,OAAO,CAACU,CAAD,CAAP,CAAWR,IAAX,KAAoBF,OAAO,CAACU,CAAC,GAAC,CAAH,CAAP,CAAaR,IAA5E,EAAiF;AAC7E,YAAGF,OAAO,CAACU,CAAD,CAAP,CAAWR,IAAX,IAAmB,GAAtB,EAA0B;AACxBa,UAAAA,OAAO,CAACX,MAAD,CAAP;AACD,SAFD,MAGM,IAAGJ,OAAO,CAACU,CAAD,CAAP,CAAWR,IAAX,IAAkB,IAArB,EAA0B;AAC7Ba,UAAAA,OAAO,CAACV,IAAD,CAAP;AACD,SAFI,MAGA,IAAGL,OAAO,CAACU,CAAD,CAAP,CAAWR,IAAX,IAAiB,GAApB,EAAwB;AAC3Ba,UAAAA,OAAO,CAACT,QAAD,CAAP;AACF,SAFK,MAGA,IAAGN,OAAO,CAACU,CAAD,CAAP,CAAWR,IAAX,IAAiB,GAApB,EAAwB;AAC3Ba,UAAAA,OAAO,CAACR,GAAD,CAAP;AACF,SAFK,MAGA,IAAGP,OAAO,CAACU,CAAD,CAAP,CAAWR,IAAX,IAAiB,GAApB,EAAwB;AAC3Ba,UAAAA,OAAO,CAACP,GAAD,CAAP;AACF,SAFK,MAGA,IAAGR,OAAO,CAACU,CAAD,CAAP,CAAWR,IAAX,IAAiB,KAApB,EAA0B;AAC7Ba,UAAAA,OAAO,CAACN,KAAD,CAAP;AACF;AACL,OAnBA,MAmBK,IAAGT,OAAO,CAACU,CAAD,CAAP,CAAW/C,IAAX,IAAmBqC,OAAO,CAACU,CAAC,GAAC,CAAH,CAAP,CAAa/C,IAAhC,IAAwCqC,OAAO,CAACU,CAAD,CAAP,CAAWR,IAAX,IAAmBF,OAAO,CAACU,CAAC,GAAC,CAAH,CAAP,CAAaR,IAA3E,EAAgF,CAErF;AACF;AA9FuC;;AA2C1C,OAAI,IAAIQ,CAAC,GAAG,CAAZ,EAAgBA,CAAC,GAAGV,OAAO,CAACgB,MAA5B,EAAoCN,CAAC,EAArC,EAAwC;AAAA,UAAhCA,CAAgC;AAoDvC;;AACD,MAAMO,OAAO,GAAGC,MAAM,CAACC,MAAP,OAAAD,MAAM,qBAAWf,UAAU,CAACF,GAAX,CAAe,UAAAN,IAAI;AAAA,+BAAQA,IAAI,CAAChC,IAAb,EAAoBgC,IAAI,CAACkB,GAAzB;AAAA,GAAnB,CAAX,EAAtB;;AACA,MAAMO,UAAU,qBAAOH,OAAP,sBAAgBxC,UAAhB,EAA4B;AAAC4C,IAAAA,QAAQ,EAAC,IAAV;AAAeC,IAAAA,aAAa,EAAC;AAA7B,GAA5B,EAAhB;;AAEE,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAExE,MAAM,CAACG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,UAAU,EAAK,oBAACsE,GAAD,EAAO;AAAC7C,MAAAA,aAAa,CAAC6C,GAAG,CAACC,UAAL,CAAb;AAA8B,KADvD;AAEE,IAAA,KAAK,EAAE;AACLC,MAAAA,WAAW,EAAE,MADR;AAELC,MAAAA,MAAM,EAAE,GAFH;AAGLtE,MAAAA,KAAK,EAAC;AAHD,KAFT;AAOE,IAAA,WAAW,EACTgE,UARJ;AAUE,IAAA,WAAW,EAAE,WAVf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAaE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEtE,MAAM,CAACO,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCoB,UAAlC,2DAbF,EAcE,oBAAC,YAAD;AACE,IAAA,YAAY,EAAEoB,kBADhB;AAEE,IAAA,UAAU,EAAExB,KAAK,CAACsD,UAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,EAiBE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAE,MAApB;AACA,IAAA,OAAO,EAAE;AAAA,aAAItD,KAAK,CAACsD,UAAN,CAAiBC,QAAjB,CAA0B,cAA1B,CAAJ;AAAA,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CADF;AAwBH,CA3HD;;AA6HA,eAAexD,wBAAf","sourcesContent":["import React ,{useState,useEffect}from 'react';\nimport { StyleSheet, View,Text} from 'react-native';\nimport TrainingList from \"../components/TrainingList\"\nimport CircleButton from \"../elements/CircleButton\"\nimport firebase from \"firebase\"\nimport {Calendar} from 'react-native-calendars'\n\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FFFDF6\",\n    width: \"100%\"\n  },\n  trainingDay:{\n    textAlign:\"center\",\n    fontSize:20,\n    fontWeight:\"bold\",\n    backgroundColor:\"green\",\n    color:\"#fff\",\n  }\n});\nconst  dateToString = (date)=>{\n  const str = date.toDate().toISOString();\n  return str.split(\"T\")[0]\n}\nconst older = ((a,b)=>(a.date.seconds - b.date.seconds))\n\nconst  TrainingManagementScreen = (props)=> {\n  const [trainingList,setTrainingList] = useState([])\n  const [currentDay,setCurrentDay] = useState(new Date().toISOString().split(\"T\")[0],)\n\n  useEffect(()=>{\n\n    const {currentUser} = firebase.auth();\n    const db =firebase.firestore()\n\n    db.collection(`users/${currentUser.uid}/trainingMemoList`)\n     .onSnapshot((querySnapshot)=>{\n       const trainingList = []\n       querySnapshot.forEach((doc)=>{\n         trainingList.push({...doc.data(),key: doc.id})\n       })\n       setTrainingList(trainingList)\n    })   \n    \n    \n  },[])\n  const todayTrainingList = trainingList.filter((item,index,)=>{\n    if (dateToString(item.date) === currentDay){\n      return true\n    }\n  })\n  const sortedTrainingList = [...todayTrainingList].sort(older)\n  const dotTrainingList = [...trainingList].sort(older)\n\n\n  const dotList = dotTrainingList.map((item)=>{\n    return {date:dateToString(item.date),part:item.part}\n  })\n  \n\n  const markedList = [0]\n  const breast = \"red\"\n  const back = \"green\"\n  const shoulder = \"blue\"\n  const arm = \"yellow\"\n  const leg = \"purple\"\n  const other = \"black\"\n  \n\n  for(let i = 0 ; i < dotList.length; i++){\n    const addMarkedList = (dotColor)=>{\n      markedList.push({\n        date:[dotList[i].date],\n        dot:{dots:[{color:dotColor}]}\n      })\n    }\n    const addDots = (dotColor)=>{\n      markedList[markedList.length-1].dot.dots.push({color:dotColor})\n    }\n    if(i == 0 || dotList[i].date !== dotList[i-1].date){\n      if(dotList[i].part == \"胸\"){\n        addMarkedList(breast)\n      }\n      else if(dotList[i].part ==\"背中\"){\n        addMarkedList(back)\n      }\n      else if(dotList[i].part==\"肩\"){\n        addMarkedList(shoulder)\n      }\n      else if(dotList[i].part==\"腕\"){\n        addMarkedList(arm)\n      }\n      else if(dotList[i].part==\"脚\"){\n        addMarkedList(leg)\n      }else if(dotList[i].part==\"その他\"){\n        addMarkedList(other)\n      }\n    }else if(i > 0){\n       if(dotList[i].date == dotList[i-1].date && dotList[i].part !== dotList[i-1].part){\n           if(dotList[i].part == \"胸\"){\n             addDots(breast)\n           }\n            else if(dotList[i].part ==\"背中\"){\n              addDots(back)\n            }\n            else if(dotList[i].part==\"肩\"){\n              addDots(shoulder)\n           }\n            else if(dotList[i].part==\"腕\"){\n              addDots(arm)\n           }\n            else if(dotList[i].part==\"脚\"){\n              addDots(leg)\n           }\n            else if(dotList[i].part==\"その他\"){\n              addDots(other)\n           }    \n      }else if(dotList[i].date == dotList[i-1].date && dotList[i].part == dotList[i-1].part){\n        \n      }\n    }\n  }\n  const dotDays = Object.assign(...markedList.map(item => ({ [item.date]: item.dot })));\n  const markedDays = {...dotDays,[currentDay]:{selected:true,selectedColor:\"#ffa500\"}}\n\n    return (\n      <View style={styles.container}>\n        <Calendar \n          onDayPress = {((day)=>{setCurrentDay(day.dateString)})}\n          style={{\n            borderColor: 'gray',\n            height: 350,\n            width:\"100%\"\n          }}\n          markedDates={\n            markedDays\n          }\n          markingType={'multi-dot'}\n        />\n        <Text style={styles.trainingDay}>{currentDay}のトレーニング記録</Text>\n        <TrainingList \n          trainingList={sortedTrainingList}\n          navigation={props.navigation}/>\n        <CircleButton name={\"plus\"} \n        onPress={()=>props.navigation.navigate(\"TrainingMenu\")}\n        /> \n      </View>\n    ); \n  \n}\n\nexport default TrainingManagementScreen"]},"metadata":{},"sourceType":"module"}